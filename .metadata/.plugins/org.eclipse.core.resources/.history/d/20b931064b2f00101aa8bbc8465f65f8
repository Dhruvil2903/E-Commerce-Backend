package com.product.Security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
		http.csrf(csrf -> csrf.disable()) //new way to disable CSRF
				.authorizeHttpRequests(auth -> auth.requestMatchers("/api/products/**").permitAll() 
						.anyRequest().authenticated() // ðŸ”’ protect other routes
				).httpBasic(Customizer.withDefaults()); // optional: enables basic auth for protected routes

		return http.build();
	}
}