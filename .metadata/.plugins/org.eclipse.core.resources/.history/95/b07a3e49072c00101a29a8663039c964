package com.user.Controller;

import java.util.Optional;

import org.apache.hc.client5.http.auth.InvalidCredentialsException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.user.CustomException.NoUserFoundException;
import com.user.CustomException.UserAlreadyExistException;
import com.user.FeignClient.ProductServiceClient;
import com.user.Service.UserService;
import com.user.UserModel.Product;
import com.user.UserModel.User;

@RestController
@RequestMapping("/api/auth")
@CrossOrigin(origins = "https://localhost:5173",allowedHeaders = "*")
public class UserController {

	@Autowired
	private UserService userService;

	
	@PostMapping("/login")
	public ResponseEntity<?> login(@RequestBody User user) {
		try {
			Optional<User> loggedInUser = userService.login(user);
			return ResponseEntity.ok(loggedInUser.get());
		} catch (NoUserFoundException | InvalidCredentialsException e) {
			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(e.getMessage());
		}

	}

	@PostMapping("/register")
	public ResponseEntity<?> register(@RequestBody User user) {
		
		try {
			User registeredUser = userService.register(user);
			return ResponseEntity.ok(registeredUser.get());
		}catch(UserAlreadyExistException e) {
			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(e.getMessage());
		}
	

	}
}
